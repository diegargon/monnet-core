# @meta
# id: "std-install-monnet-agent-systemd"
# name: "std-install-monnet-agent-systemd"
# description: "Install Monnet Agent on systemd distributions"
# os: ["linux", "posix"]
# tags: ["monnet", "agent-config", "installation", "std"]
# requires:
#   - python: "3.9"
---
- name: Install Monnet Agent on systemd
  hosts: all
  become: true
  gather_facts: false

  tasks:
    - name: Print agent_config
      debug:
        msg: "{{ agent_config | from_json | to_nice_json }}"

    - name: Gather OS family
      ansible.builtin.setup:
        filter: ansible_os_family

    - name: Print OS family with a message
      ansible.builtin.debug:
        msg: "The OS family of this host is: {{ ansible_os_family }}"

    - name: Fail if OS family is not recognized
      ansible.builtin.fail:
        msg: "Unsupported OS family detected: {{ ansible_facts['os_family'] }}. Skipping installation."
      when: ansible_facts['os_family'] not in ["Debian", "RedHat"]

    - name: Check Python version
      command: python3 --version
      register: python_version_output
      failed_when: python_version_output.rc != 0

    - name: Print Python version output
      debug:
        msg: "Python version output: {{ python_version_output.stdout }}"

    - name: Ensure Python version is at least 3.9
      ansible.builtin.fail:
        msg: "Python version must be at least 3.9. Found: {{ python_version_output.stdout }}"
      when: python_version_output.stdout | regex_search('Python ([0-9]+)\.([0-9]+)') is not defined or
            (python_version_output.stdout | regex_search('Python ([0-9]+)\.([0-9]+)') | regex_replace('Python ', '') | split('.') | map('int') | first < 3 or
             python_version_output.stdout | regex_search('Python ([0-9]+)\.([0-9]+)') | regex_replace('Python ', '') | split('.') | map('int') | last < 9)

    - name: Install Python libs requeriments on Debian-based systems
      ansible.builtin.package:
        name:
          - python3-psutil
          - python3-daemon
        state: present
      when: ansible_facts['os_family'] == "Debian"

    - name: Install Python libs requeriments on RedHat-based systems
      ansible.builtin.package:
        name:
          - python3-psutil
          - python3-daemon
        state: present
      when: ansible_facts['os_family'] == "RedHat"

    - name: Fail if OS family is not recognized
      ansible.builtin.fail:
        msg: "Unsupported OS family detected: {{ ansible_facts['os_family'] }}. Skipping installation."
      when: ansible_facts['os_family'] not in ["Debian", "RedHat"]


    - name: Ensure that agent_config exists
      assert:
        that:
          - agent_config is defined
        fail_msg: "The variable 'agent_config' is required and must be defined."

    - name: Check if the /opt/monnet_agent directory exists
      stat:
        path: /opt/monnet_agent
      register: opt_monnet_dir

    - name: Create the /opt/monnet_agent directory if it doesn't exist
      file:
        path: /opt/monnet_agent
        state: directory
        mode: '0755'
      when: not opt_monnet_dir.stat.exists

    - name: Copy the monnet_agent/* content to /opt/monnet_agent
      copy:
        src: "/opt/monnet-core/monnet_agent/"
        dest: /opt/monnet_agent/
        mode: '0755'
      register: copy_monnet_agent
      ignore_errors: true

    - name: Fail if copy monnet_agent failed
      ansible.builtin.fail:
        msg: "Failed to copy monnet_agent to /opt/monnet_agent"
      when: copy_monnet_agent is failed

    - name: Copy monnet-shared dir
      copy:
        src: /opt/monnet-core/monnet_shared/
        dest: /opt/monnet_agent/monnet_shared/
      register: copy_monnet_shared
      ignore_errors: true

    - name: Fail if copy monnet_shared failed
      ansible.builtin.fail:
        msg: "Failed to copy monnet_shared to /opt/monnet_agent/monnet_shared/"
      when: copy_monnet_shared is failed

    - name: Check if the /etc/monnet directory exists
      stat:
        path: /etc/monnet
      register: etc_monnet_dir

    - name: Create the /etc/monnet directory if it doesn't exist
      file:
        path: /etc/monnet
        state: directory
        mode: '0755'
      when: not etc_monnet_dir.stat.exists

#    - name: Create the agent-config file if it doesn't exist
#      copy:
#        dest: /etc/monnet/agent-config
#        content: "{{ agent_config | from_json | to_nice_json }}"
#        mode: '0644'
#        creates: /etc/monnet/agent-config

    - name: Create the agent-config file
      copy:
        dest: /etc/monnet/agent-config
        content: "{{ agent_config | from_json | to_nice_json }}"
        mode: '0644'

    - name: Copy the monnet-agent-linux.service file to /etc/systemd/system
      copy:
        src: "/opt/monnet-core/files/monnet-agent-linux.service"
        dest: /etc/systemd/system/monnet-agent-linux.service
        mode: '0644'
      register: copy_systemd_service
      ignore_errors: true

    - name: Fail if copy monnet-agent-linux.service failed
      ansible.builtin.fail:
        msg: "Failed to copy monnet-agent-linux.service to /etc/systemd/system/"
      when: copy_systemd_service is failed

    - name: Check if the /etc/systemd/system/monnet-agent-linux.service file exists
      stat:
        path: /etc/systemd/system/monnet-agent-linux.service
      register: systemd_service

    - name: Enable and start the monnet-agent-linux service
      systemd:
        name: monnet-agent-linux
        enabled: yes
        state: restarted
        daemon_reload: yes
      when: systemd_service.stat.exists
