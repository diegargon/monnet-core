- name: Ensure MySQL is running and check database locks
  hosts: all
  become: true
  gather_facts: false

  vars:
    db_service: "{{ database_service }}"
    db_name: "{{ database_name }}"  
    mysql_user: "{{ db_username }}" 
    mysql_password: "{{ db_password }}"  

  tasks:
    - name: Check if MySQL service is running
      ansible.builtin.service_facts:

    - name: Start MySQL service if stopped
      ansible.builtin.service:
        name: "{{ db_service }}"
        state: started
      when: ansible_facts.services[db_service].state != "running"

    - name: Check for locking issues in the database
      ansible.builtin.shell: |
        mysql -u {{ mysql_user }} -p{{ db_password }} -e "SHOW ENGINE INNODB STATUS \G" | grep -i "waiting for" || true
      register: locking_status
      changed_when: false

    - name: Attempt to repair database if locking issues detected
      ansible.builtin.shell: |
        mysqlcheck -u {{ mysql_user }} -p{{ db_password }} --repair {{ db_name }}
      when: locking_status.stdout != ""
      register: repair_result

    - name: Debug repair result
      ansible.builtin.debug:
        var: repair_result.stdout
