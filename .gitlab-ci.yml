# TODO: review deploy script works but is not right

stages:
  - test
  - deploy

before_script:
  - echo "nameserver 192.168.2.126" > /etc/resolv.conf
test:
  stage: test
  image: python:3.9
  variables:
    PYTHONPATH: "/builds/diegargon/monnet-core:/builds/diegargon/monnet-core/monnet_gateway"

  script:
    - pip install -r requirements.txt
    - python -c "import sys; print('PYTHONPATH is:', sys.path)"
    - ls -al
    - pytest -v tests/test_monnet_gateway.py

deploy_to_github:
  stage: deploy
  #when: manual
  image: alpine/git
  script:
    # Configurar el usuario de Git
    - git config --global user.name "GitLabCI"
    - git config --global user.email "ci-bot@no.domain"
    - git remote add github https://oauth2:${GITHUB_TOKEN}@github.com/diegargon/monnet-core.git
    - git checkout main
    - git pull origin main
    - git branch
    - git status
    - git push github main --force

    ##
    ## Script que inicializa todo con el local
    ##
    ## Limpiar cualquier configuración de git previa
    #- rm -rf .git

    ## Inicializar un nuevo repositorio git
    #- git init

    ## Configurar el usuario de Git
    #- git config --global user.name "GitLabCI"
    #- git config --global user.email "ci-bot@no.domain"

    ## Añadir el remote de GitHub (reemplaza con tu repositorio GitHub)
    #- git remote add origin https://oauth2:${GITHUB_TOKEN}@github.com/diegargon/monnet-core.git

    ## Traer todos los cambios del repositorio remoto
    #- git fetch origin main

    ## Cambiar a la rama principal, asegurando que existe
    #- git checkout main || git checkout -b main

    ## Añadir los cambios locales al repositorio
    #- git add .

    ## Realizar el commit con un mensaje adecuado
    #- git commit -m "Update code from GitLab CI" || echo "No changes to commit"

    ## Empujar los cambios al repositorio de GitHub
    #- git push origin main --force
