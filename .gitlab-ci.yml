stages:
  - test
  - deploy

before_script:
  - echo "nameserver 192.168.2.126" > /etc/resolv.conf
  - cat /etc/resolv.conf

test:
  stage: test
  image: python:3.9
  variables:
    PYTHONPATH: "/builds/diegargon/monnet-core:/builds/diegargon/monnet-core/monnet_gateway"

  script:
    - pip install -r requirements.txt
    - python -c "import sys; print('PYTHONPATH is:', sys.path)"
    - ls -al
    - pytest -v tests/

deploy_to_github:
  stage: deploy
  image: alpine/git
  when: manual
  script:
    # Configurar el usuario de Git
    - git config --global user.name "GitLabCI"
    - git config --global user.email "ci-bot@no.domain"
    - git remote add github https://oauth2:${GITHUB_TOKEN}@github.com/diegargon/monnet-core.git
    - git checkout main 2>/dev/null || git checkout -b main
    #- git checkout main || git checkout -b main
    #- git fetch github
    #- git merge github/main || echo "No changes to merge"
    - git add .
    #- git commit -m "Update code from GitLab CI" || echo "No changes to commit"
    - git diff --cached --quiet || git commit -m "Deploy from GitLab"
    - git repack -a -d --window=250 --depth=250  # Reempaqueta objetos Git
    - git gc --aggressive
    #- git gc
    #- git push github main --no-thin
    - git fsck --full
    - git push github main --force --no-verify

    ##
    ## Script que inicializa todo con el local
    ##
    ## Limpiar cualquier configuración de git previa
    #- rm -rf .git
    ## Inicializar un nuevo repositorio git
    #- git init
    ## Configurar el usuario de Git
    #- git config --global user.name "GitLabCI"
    #- git config --global user.email "ci-bot@no.domain"
    ## Añadir el remote de GitHub (reemplaza con tu repositorio GitHub)
    #- git remote add origin https://oauth2:${GITHUB_TOKEN}@github.com/diegargon/monnet-core.git
    ## Traer todos los cambios del repositorio remoto
    #- git fetch origin main
    ## Cambiar a la rama principal, asegurando que existe
    #- git checkout main || git checkout -b main
    ## Añadir los cambios locales al repositorio
    #- git add .
    ## Realizar el commit con un mensaje adecuado
    #- git commit -m "Update code from GitLab CI" || echo "No changes to commit"
    ## Empujar los cambios al repositorio de GitHub
    #- git push origin main --force

#initial_deploy_to_github:
#  stage: deploy
#  image: alpine/git
#  when: manual
#  script:
    # Configurar el usuario de Git
#    - git config --global user.name "GitLabCI"
#    - git config --global user.email "ci-bot@no.domain"
#    - git remote add github https://oauth2:${GITHUB_TOKEN}@github.com/diegargon/monnet-core.git
#    - git checkout main || git checkout -b main
#    - git add .
#    - git commit -m "Update code from GitLab CI" || echo "No changes to commit"
#    - git gc
#    - git fetch --unshallow
#    - git push github main --no-thin

    ##
    ## Script que inicializa todo con el local
    ##
    ## Limpiar cualquier configuración de git previa
    #- rm -rf .git

    ## Inicializar un nuevo repositorio git
    #- git init

    ## Configurar el usuario de Git
    #- git config --global user.name "GitLabCI"
    #- git config --global user.email "ci-bot@no.domain"

    ## Añadir el remote de GitHub (reemplaza con tu repositorio GitHub)
    #- git remote add origin https://oauth2:${GITHUB_TOKEN}@github.com/diegargon/monnet-core.git

    ## Traer todos los cambios del repositorio remoto
    #- git fetch origin main

    ## Cambiar a la rama principal, asegurando que existe
    #- git checkout main || git checkout -b main

    ## Añadir los cambios locales al repositorio
    #- git add .

    ## Realizar el commit con un mensaje adecuado
    #- git commit -m "Update code from GitLab CI" || echo "No changes to commit"

    ## Empujar los cambios al repositorio de GitHub
    #- git push origin main --force
